########### Makefile for making a distributable version of the PressMint TEI and TEI.ana corpora and metadata overviews
#### Variables give the included countries, version, handle, paths and scripts to use
#### make nohup1 starts make all and saves the log in Logs/ 
#### make all builds the plain text and linguistically annotated corpora
#### and there are a lot of test- targets to test various parts of the build.

### VARIABLES

### COMPLETE SET OF CORPORA
CORPORA=AT BG CZ ES GR IS LV NL PL SI UA

# Used in targets that run only for one corpus
CORPUS=SI

# Version number and PID of next PressMint release
VERSION = 0.1
HANDLE-TEI = http://hdl.handle.net/11356/[TEXT]
HANDLE-ANA = http://hdl.handle.net/11356/[ANA]

#Absolute paths are needed otherwise problems with XSLT
PRESSMINT := $(shell realpath .. | tr -d '\n')# get real absolute path to PressMint directory
HERE = ${PRESSMINT}/Build
TEMP = ${HERE}/Temp
SCH = ${PRESSMINT}/TEI
# Where the submitted corpora are found: PressMint-XX.TEI/ and PressMint-XX.TEI.ana
SOURCES = ${HERE}/Sources-TEI

#Where the produced corpora are put for inspection
WEB = tomaz@nl.ijs.si:/home/tomaz/www/tmp/PressMint

##Note that script variables are at the end of the Makefile!

###### Targets

### Overviews to be put in Metadata/
### This should be done once all the corpora have been built
metadata:	metadata-quant-tsv metadata-quant-tex
#Make overview LaTeX tables
metadata-quant-tex:
	$s mode=tex -xsl:Scripts/pressmint2cnt-overview.xsl   Distro/PressMint.xml > Metadata/PressMint-overview-stats.tex
	$s mode=tex -xsl:Scripts/pressmint2cnt-speeches.xsl   Distro/PressMint.xml > Metadata/PressMint-speeches-stats.tex
#Make overview TSV tables
metadata-quant-tsv:
	$s mode=tsv -xsl:Scripts/pressmint2cnt-overview.xsl   Distro/PressMint.xml > Metadata/PressMint-overview-stats.tsv
	$s mode=tsv -xsl:Scripts/pressmint2cnt-speeches.xsl   Distro/PressMint.xml > Metadata/PressMint-speeches-stats.tsv

### Make overall root(.ana) for PressMint for Sources-TEI/ and Distro/, 
### This should be done once all the corpora have been built
all-roots:	source-roots master-roots
source-roots:
	$s base=${HERE}/Sources-TEI type=TEI -xsl:../Scripts/pressmint2root.xsl \
	../Scripts/PressMint-rootTemplate.xml > ${HERE}/Sources-TEI/PressMint.xml
	$s base=${HERE}/Sources-TEI type=TEI.ana -xsl:../Scripts/pressmint2root.xsl \
	../Scripts/PressMint-rootTemplate.xml > ${HERE}/Sources-TEI/PressMint.ana.xml
master-roots:
	$s base=${HERE}/Distro type=TEI -xsl:../Scripts/pressmint2root.xsl \
	../Scripts/PressMint-rootTemplate.xml > ${HERE}/Distro/PressMint.xml
	$s base=${HERE}/Distro type=TEI.ana -xsl:../Scripts/pressmint2root.xsl \
	../Scripts/PressMint-rootTemplate.xml > ${HERE}/Distro/PressMint.ana.xml

###### Various tests
test-vert5:
	$s meta=../Build/Distro/PressMint-SI.TEI.ana/PressMint-SI.ana.xml -xsl:../Scripts/pressmint2xmlvert.xsl \
	../Build/Distro/PressMint-SI.TEI.ana/2020/PressMint-SI_2020-03-13-SDZ8-Izredna-31.ana.xml  > Test/test-SI.vert
test-vert4:
	$s meta=${HERE}/Distro/PressMint-SI.TEI.ana/PressMint-SI.ana.xml -xsl:../Scripts/pressmint2xmlvert.xsl \
	${HERE}/Distro/PressMint-SI.TEI.ana/2022/PressMint-SI_2022-01-13-SDZ8-Izredna-93.ana.xml > test-SI.vert
test-vert3:
	${FINALIZE} -vert -codes SI -in ${HERE}/Distro -out ${HERE}/Distro
test-conll5:
	../Scripts/pressmintp2conllu.pl -jobs 1 -in ../Build/Sources-TEI/PressMint-${CORPUS}.TEI.ana -out ../Build/Test
test-conll4:
	$s meta=../Build/Distro/PressMint-SI.TEI.ana/PressMint-SI.ana.xml \
	-xsl:../Scripts/pressmint2conllu.xsl ../Build/Distro/PressMint-SI.TEI.ana/2000/PressMint-SI_2000-10-27-SDZ3-Redna-01.ana.xml \
	> Test/test-SI.conllu
test-conll1:
	${FINALIZE} -conll -codes ${CORPUS} -in ${HERE}/Distro -out ${HERE}/Distro
test-meta6:
	$s out-lang=en meta=../Build/Sources-TEI/PressMint-SI.TEI.ana/PressMint-SI.ana.xml -xsl:../Scripts/pressmint2meta.ana.xsl \
	../Build/Sources-TEI/PressMint-SI.TEI.ana/2020/PressMint-SI_2020-01-07-O1114.ana.xml > Test/test.ana-meta-en.tsv
test-meta5:
	$s out-lang=en meta=../Build/Distro/PressMint-SI.TEI/PressMint-SI.xml -xsl:../Scripts/pressmint2meta.xsl \
	../Build/Distro/PressMint-SI.TEI/2000/PressMint-SI_2000-10-27-SDZ3-Redna-01.xml > Test/test.tsv
test-meta4:
	$s out-lang=xx meta=../Build/Distro/PressMint-SI/PressMint-SI.xml -xsl:../Scripts/pressmint2meta.xsl \
	../Build/Distro/PressMint-SI/2007/PressMint-SI_2007-11-28-SDZ4-Izredna-30.ana.xml > Test/test.tsv
test-meta3:
	$s out-lang=en meta=../Build/Distro/PressMint-SI.TEI/PressMint-SI.xml -xsl:../Scripts/pressmint2meta.xsl \
	../Build/Distro/PressMint-SI.TEI/2016/PressMint-RS_2016-06-03-0.xml  > test.tsv
test-meta2:
	$s out-lang=en meta=../Build/Distro/PressMint-${CORPUS}.TEI/PressMint-${CORPUS}.xml -xsl:../Scripts/pressmint2meta.xsl \
	../Build/Test/test-${CORPUS}.xml > test-${CORPUS}.tsv
test-meta1:
	${FINALIZE} -txt -codes ${CORPUS} -in ${HERE}/Temp -out ${HERE}/Temp
test-text1:
	${FINALIZE} -txt -codes ${CORPUS} -in ${HERE}/Distro -out ${HERE}/Distro
test-text2:
	../Scripts/pressmintp-tei2text.pl -jobs 2 \
	-in ../Build/Distro/PressMint-${CORPUS} -out ../Build/Distro/PressMint-${CORPUS}
test-valid:
	${FINALIZE} -valid -codes ${CORPUS} -in ${HERE}/Distro -out ${HERE}/Distro
test-tei3:
	${FINALIZE} -valid -codes ${CORPUS} -in ${HERE}/Distro -out ${HERE}/Distro
test-tei2:
	${FINALIZE} -tei -codes ${CORPUS} -in ${HERE}/Sources-TEI -out ${HERE}/Distro
test-tei1:
	${FINALIZE} -ana -codes ${CORPUS} -in ${HERE}/Sources-TEI -out ${HERE}/Distro
test-release:
	$s anaDir=../Build/Distro/PressMint-${CORPUS}.TEI.ana outDir=Test -xsl:../Scripts/pressmint2release.xsl \
	../Build/Sources-TEI/PressMint-${CORPUS}.TEI/PressMint-${CORPUS}.xml

# Post-hoc copy READMEs to master, in case they need to be changed after the corpora have been built
cp-readmes:
	Scripts/cp-readmes.pl -codes "${CORPORA}" -version ${VERSION} -teihandle ${HANDLE-TEI} -anahandle ${HANDLE-ANA} \
	-docs Sources-Distro -out ${HERE}/Distro

# Make samples only
all-samples:	samples cp-samples
samples:
	for CORPUS in ${CORPORA}; do \
	${FINALIZE} -sample -codes $${CORPUS} -in ${SOURCES} -out ${HERE}/Distro 2> Logs/PressMint-$${CORPUS}-samples.log; \
	done;
#Merge original and MTed samples into official Samples directory
cp-samples:
	Scripts/cp-samples.pl 'Distro/PressMint-*' ../Samples


# Make vertical file with en metadata, a hack:
XX-CORPORA=AT-xx BG-xx CZ-xx ES-xx GR-xx IS-xx LV-xx NL-xx PL-xx SI-xx UA-xx
make-verts-xx-nohup:
	nohup time make make-verts-xx > Logs/PressMint-Verts-xx.log &
make-verts-xx:
	for CORPUS in ${CORPORA}; do \
        ../Scripts/pressmintp-tei2vert-xx.pl -jobs ${THREADS} \
        -in ${HERE}/Distro/PressMint-$${CORPUS}.TEI.ana -out Temp/PressMint-$${CORPUS}-xx.vert; \
	done;
	perl ../Scripts/join-all-verts.pl -codes '${XX-CORPORA}' -in 'Temp' -out Verts/PressMint-XX.${VERSION}.vert

# Make vertical files only
make-verts:
	for CORPUS in ${CORPORA}; do \
	${FINALIZE} -vert -codes $${CORPUS} -in ${SOURCES} -out ${HERE}/Distro; \
	done;
	make verts

# Put logs and packed build to web for inspection by corpus compilers
web-nohup:
	nice nohup time make web > PressMint-Web.log &
web:
	rsync -av Logs/*.log ${WEB}/Logs
	rsync -av Packed/*.tgz ${WEB}/Repo


###### Targets for producing releasable version of PressMint corpora
FINALIZE = perl ../Scripts/pressmint2distro.pl -version ${VERSION} -teihandle ${HANDLE-TEI} -anahandle ${HANDLE-ANA} -schema ${SCH} -docs Sources-Distro -procMemGB ${JAVA-MEMORY} -procChunkSize ${CHUNK-SIZE} -procThreads ${THREADS}

### For real
nohup:
	nice nohup time make all > Logs/PressMint.log &
all:	final join-verts pack
xall:	final join-verts pack

pack-logs:
	mkdir -p Packed/PressMint-logs
	rm -f Packed/PressMint-logs/*
	for CORPUS in ${CORPORA}; do \
	cp Logs/PressMint-$${CORPUS}.*log Packed/PressMint-logs; \
	done
	cd Packed; tar -czf PressMint-logs.tgz PressMint-logs
	rm -fr Packed/PressMint-logs
	mkdir -p Packed/PressMint-en-logs
	rm -f Packed/PressMint-en-logs/*

pack:
	perl Scripts/pack-pressmint.pl -codes '${CORPORA}' -in Distro -out Packed
join-verts:
	perl Scripts/join-verts.pl -version ${VERSION} -codes '${CORPORA}' -in Distro -out Verts
final:
	for CORPUS in ${CORPORA}; do \
	${FINALIZE} -all -codes $${CORPUS} -in ${SOURCES} -out ${HERE}/Distro 2> Logs/PressMint-$${CORPUS}.log; \
	grep -a -i 'fatal' Logs/PressMint-$${CORPUS}.log >  Logs/PressMint-$${CORPUS}.error.log;  \
	grep -a -i 'error' Logs/PressMint-$${CORPUS}.log >> Logs/PressMint-$${CORPUS}.error.log;  \
	grep -a -i 'warn'  Logs/PressMint-$${CORPUS}.log >  Logs/PressMint-$${CORPUS}.warn.log;  \
	echo "$${CORPUS}.warn"; \
	cat Logs/PressMint-$${CORPUS}.warn.log | wc -l;  \
	cat Logs/PressMint-$${CORPUS}.warn.log | sort | uniq | wc -l;  \
	echo "$${CORPUS}.error"; \
	cat Logs/PressMint-$${CORPUS}.error.log | wc -l;  \
	cat Logs/PressMint-$${CORPUS}.error.log | sort | uniq | wc -l;  \
	done;

# Join all verts, probably doesn't work
join-all-verts:
	perl ../Scripts/join-all-verts.pl -codes '${CORPORA}' -in 'Distro' -out Verts/PressMint-XX.${VERSION}.vert

###################### SCRIPT VARIABLES
#Set java memory maxsize in GB
JAVA-MEMORY=480
JM := $(shell test -n "$(JAVA-MEMORY)" && echo -n "-Xmx$(JAVA-MEMORY)g")

CHUNK-SIZE=500
THREADS=10

P = parallel --citation --gnu --halt 2
#Run java with a large heap, as a complete corpus needs to be read in
s = java -jar $(JM) ../Scripts/bin/saxon.jar
j = java -jar ../Scripts/bin/jing.jar

pm = $j ${SCH}/PressMint.odd.rng 	        # Validate with PressMint ODD
